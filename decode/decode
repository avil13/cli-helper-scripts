#!/usr/bin/php
<?php

// var_dump($argv);

$str = array_slice($argv, -1)[0];

$len = count($argv);


if ($len < 1 || in_array('-h', $argv)) {
	echo getHelp();
	return;
}


if (hasKeyInArgs($argv) === false) {
	$arr = array_slice($argv, 2);

	$str = implode(' ', $arr);
	
	getDecode($str);
	return;
}


if (in_array('-f', $argv)) {
	$index = array_search('-f', $argv);

	if ($index !== false || empty($argv[$index + 1])) {
		$filename = readline("Enter filename : ");
	} else {
		$filename = $argv[$index + 1];
	}

	$txt = file_get_contents(getcwd() . '/' . trim($filename));

	getDecode($txt);
	return;
}


if (in_array('-u', $argv) || in_array('-ue', $argv)) {
	$index = array_search('-u', $argv);
	$flip = false;

	if (!$index) {
		$index = array_search('-ue', $argv);
		$flip = true;
	}
	
	$strArr = array_slice($argv, $index + 1);

	echo jDecoder(implode(' ', $strArr), $flip);
	return;
}



// functions

function getHelp() {
	return "
-h   help, show this message
-f   read file
-u   UTF-8 decode
-ue  UTF-8 encode

You can use only one key param

  decode [options] [string]
";
}

function hasKeyInArgs($args) {
	$arr = array_slice($args, 1);
	$keyList = ['-h', '-f', '-u', '-ue'];
	$hasKey = false;

	foreach ($arr as $val) {
		if (in_array($val, $keyList)) {
			$hasKey = true;
		}
	}
	return $hasKey;
}


function getDecode($txt) {
	echo "\n" . urldecode($txt) . "\n\n";
}



/**
 * @param  String 
 * @return String 
 */
function jDecoder($json_str, $flip = false) {
  $cyr_chars = array (
    '\u0430' => 'а', '\u0410' => 'А',
    '\u0431' => 'б', '\u0411' => 'Б',
    '\u0432' => 'в', '\u0412' => 'В',
    '\u0433' => 'г', '\u0413' => 'Г',
    '\u0434' => 'д', '\u0414' => 'Д',
    '\u0435' => 'е', '\u0415' => 'Е',
    '\u0451' => 'ё', '\u0401' => 'Ё',
    '\u0436' => 'ж', '\u0416' => 'Ж',
    '\u0437' => 'з', '\u0417' => 'З',
    '\u0438' => 'и', '\u0418' => 'И',
    '\u0439' => 'й', '\u0419' => 'Й',
    '\u043a' => 'к', '\u041a' => 'К',
    '\u043b' => 'л', '\u041b' => 'Л',
    '\u043c' => 'м', '\u041c' => 'М',
    '\u043d' => 'н', '\u041d' => 'Н',
    '\u043e' => 'о', '\u041e' => 'О',
    '\u043f' => 'п', '\u041f' => 'П',
    '\u0440' => 'р', '\u0420' => 'Р',
    '\u0441' => 'с', '\u0421' => 'С',
    '\u0442' => 'т', '\u0422' => 'Т',
    '\u0443' => 'у', '\u0423' => 'У',
    '\u0444' => 'ф', '\u0424' => 'Ф',
    '\u0445' => 'х', '\u0425' => 'Х',
    '\u0446' => 'ц', '\u0426' => 'Ц',
    '\u0447' => 'ч', '\u0427' => 'Ч',
    '\u0448' => 'ш', '\u0428' => 'Ш',
    '\u0449' => 'щ', '\u0429' => 'Щ',
    '\u044a' => 'ъ', '\u042a' => 'Ъ',
    '\u044b' => 'ы', '\u042b' => 'Ы',
    '\u044c' => 'ь', '\u042c' => 'Ь',
    '\u044d' => 'э', '\u042d' => 'Э',
    '\u044e' => 'ю', '\u042e' => 'Ю',
    '\u044f' => 'я', '\u042f' => 'Я',

//    '\r' => '',
//    '\n' => "\n",
//    '\t' => ''
  );

  if ($flip) {
    $cyr_chars = array_flip($cyr_chars);
  }

  echo "\n" . strtr($json_str, $cyr_chars) . "\n\n";
}

